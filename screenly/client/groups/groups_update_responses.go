// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/phpfs/go-screenly/screenly/models"
)

// GroupsUpdateReader is a Reader for the GroupsUpdate structure.
type GroupsUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GroupsUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGroupsUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGroupsUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGroupsUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGroupsUpdateOK creates a GroupsUpdateOK with default headers values
func NewGroupsUpdateOK() *GroupsUpdateOK {
	return &GroupsUpdateOK{}
}

/* GroupsUpdateOK describes a response with status code 200, with default header values.

GroupsUpdateOK groups update o k
*/
type GroupsUpdateOK struct {
	Payload *models.GroupRead
}

func (o *GroupsUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /groups/{id}/][%d] groupsUpdateOK  %+v", 200, o.Payload)
}
func (o *GroupsUpdateOK) GetPayload() *models.GroupRead {
	return o.Payload
}

func (o *GroupsUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GroupRead)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGroupsUpdateBadRequest creates a GroupsUpdateBadRequest with default headers values
func NewGroupsUpdateBadRequest() *GroupsUpdateBadRequest {
	return &GroupsUpdateBadRequest{}
}

/* GroupsUpdateBadRequest describes a response with status code 400, with default header values.

You sent a malformed or bad request.
*/
type GroupsUpdateBadRequest struct {
}

func (o *GroupsUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /groups/{id}/][%d] groupsUpdateBadRequest ", 400)
}

func (o *GroupsUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGroupsUpdateUnauthorized creates a GroupsUpdateUnauthorized with default headers values
func NewGroupsUpdateUnauthorized() *GroupsUpdateUnauthorized {
	return &GroupsUpdateUnauthorized{}
}

/* GroupsUpdateUnauthorized describes a response with status code 401, with default header values.

You provided invalid credentials.
*/
type GroupsUpdateUnauthorized struct {
}

func (o *GroupsUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /groups/{id}/][%d] groupsUpdateUnauthorized ", 401)
}

func (o *GroupsUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
