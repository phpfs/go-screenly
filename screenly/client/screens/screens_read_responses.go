// Code generated by go-swagger; DO NOT EDIT.

package screens

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/phpfs/go-screenly/screenly/models"
)

// ScreensReadReader is a Reader for the ScreensRead structure.
type ScreensReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScreensReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewScreensReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewScreensReadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewScreensReadOK creates a ScreensReadOK with default headers values
func NewScreensReadOK() *ScreensReadOK {
	return &ScreensReadOK{}
}

/* ScreensReadOK describes a response with status code 200, with default header values.

ScreensReadOK screens read o k
*/
type ScreensReadOK struct {
	Payload *models.ScreenDetailed
}

func (o *ScreensReadOK) Error() string {
	return fmt.Sprintf("[GET /screens/{id}/][%d] screensReadOK  %+v", 200, o.Payload)
}
func (o *ScreensReadOK) GetPayload() *models.ScreenDetailed {
	return o.Payload
}

func (o *ScreensReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScreenDetailed)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScreensReadUnauthorized creates a ScreensReadUnauthorized with default headers values
func NewScreensReadUnauthorized() *ScreensReadUnauthorized {
	return &ScreensReadUnauthorized{}
}

/* ScreensReadUnauthorized describes a response with status code 401, with default header values.

You provided invalid credentials.
*/
type ScreensReadUnauthorized struct {
}

func (o *ScreensReadUnauthorized) Error() string {
	return fmt.Sprintf("[GET /screens/{id}/][%d] screensReadUnauthorized ", 401)
}

func (o *ScreensReadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
