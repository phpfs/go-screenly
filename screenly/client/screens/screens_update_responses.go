// Code generated by go-swagger; DO NOT EDIT.

package screens

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/phpfs/go-screenly/screenly/models"
)

// ScreensUpdateReader is a Reader for the ScreensUpdate structure.
type ScreensUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScreensUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewScreensUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewScreensUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewScreensUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewScreensUpdateOK creates a ScreensUpdateOK with default headers values
func NewScreensUpdateOK() *ScreensUpdateOK {
	return &ScreensUpdateOK{}
}

/* ScreensUpdateOK describes a response with status code 200, with default header values.

ScreensUpdateOK screens update o k
*/
type ScreensUpdateOK struct {
	Payload *models.ScreenDetailed
}

func (o *ScreensUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /screens/{id}/][%d] screensUpdateOK  %+v", 200, o.Payload)
}
func (o *ScreensUpdateOK) GetPayload() *models.ScreenDetailed {
	return o.Payload
}

func (o *ScreensUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScreenDetailed)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScreensUpdateBadRequest creates a ScreensUpdateBadRequest with default headers values
func NewScreensUpdateBadRequest() *ScreensUpdateBadRequest {
	return &ScreensUpdateBadRequest{}
}

/* ScreensUpdateBadRequest describes a response with status code 400, with default header values.

You sent a malformed or bad request.
*/
type ScreensUpdateBadRequest struct {
}

func (o *ScreensUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /screens/{id}/][%d] screensUpdateBadRequest ", 400)
}

func (o *ScreensUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewScreensUpdateUnauthorized creates a ScreensUpdateUnauthorized with default headers values
func NewScreensUpdateUnauthorized() *ScreensUpdateUnauthorized {
	return &ScreensUpdateUnauthorized{}
}

/* ScreensUpdateUnauthorized describes a response with status code 401, with default header values.

You provided invalid credentials.
*/
type ScreensUpdateUnauthorized struct {
}

func (o *ScreensUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /screens/{id}/][%d] screensUpdateUnauthorized ", 401)
}

func (o *ScreensUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
